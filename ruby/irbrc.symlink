#!/usr/bin/ruby
require 'irb/completion'
require 'irb/ext/save-history'
require 'rubygems'

IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"

IRB.conf[:PROMPT_MODE] = :SIMPLE

IRB.conf[:AUTO_INDENT] = true

# don't save duplicates
IRB.conf[:AT_EXIT].unshift Proc.new {
  no_dups = []
  Readline::HISTORY.each_with_index { |e,i|
    begin
      no_dups << e if Readline::HISTORY[i] != Readline::HISTORY[i+1]
      rescue IndexError
    end
  }
  Readline::HISTORY.clear
  no_dups.each { |e|
    Readline::HISTORY.push e
  }
}


class Object
  # list methods which aren't in superclass
  def local_methods(obj = self)
    (obj.methods - obj.class.superclass.instance_methods).sort
  end
  
  # print documentation
  #
  #   ri 'Array#pop'
  #   Array.ri
  #   Array.ri :pop
  #   arr.ri :pop
  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.kind_of?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    puts `ri '#{method}'`
  end
end

def me
  User.find_by_login('holman')
end

def r
  reload!
end

# Use Pry everywhere
require 'pry'
Pry.start
exit
